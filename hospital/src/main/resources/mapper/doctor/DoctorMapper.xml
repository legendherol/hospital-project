<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.hospital.mapper.DoctorMapper">

    <resultMap type="Doctor" id="DoctorResult">
        <result property="id"    column="id"    />
        <result property="username"    column="username"    />
        <result property="gender"    column="gender"    />
        <result property="idCard"    column="ID_card"    />
        <result property="phone"    column="phone"    />
        <result property="userId"    column="user_id"    />
        <result property="age"    column="age"    />
        <result property="deptId"    column="dept_id"    />
        <result property="position"    column="position"    />
    </resultMap>

    <resultMap type="Doctor" id="OfficeResultRes">
        <result property="id"    column="id"    />
        <result property="username"    column="username"    />
        <result property="gender"    column="gender"    />
        <result property="idCard"    column="ID_card"    />
        <result property="phone"    column="phone"    />
        <result property="userId"    column="user_id"    />
        <result property="age"    column="age"    />
        <result property="deptId"    column="dept_id"    />
        <result property="position"    column="position"    />
        <association property="office" javaType="office">
            <id column="officeId" property="officeId"></id>
            <result column="officeName" property="officeName"></result>
        </association>
    </resultMap>

    <sql id="selectDoctorVo">
        select id, username, gender, ID_card, phone, user_id, age, dept_id, position from doctor
    </sql>

    <sql id="selectDoctorVo1">
        select id,office_id as officeId,office_name as officeName, username, gender, ID_card, phone, user_id, age, dept_id, position from doctor d left
        join office o on d.dept_id = o.office_id
    </sql>

    <select id="selectDoctorList" parameterType="Doctor" resultMap="OfficeResultRes">
        <include refid="selectDoctorVo1"/>
        <where>
            <if test="username != null  and username != ''"> and username like concat('%', #{username}, '%')</if>
            <if test="gender != null  and gender != ''"> and gender = #{gender}</if>
            <if test="idCard != null  and idCard != ''"> and ID_card = #{idCard}</if>
            <if test="phone != null  and phone != ''"> and phone = #{phone}</if>
            <if test="userId != null "> and user_id = #{userId}</if>
            <if test="age != null "> and age = #{age}</if>
            <if test="deptId != null "> and dept_id = #{deptId}</if>
            <if test="position != null  and position != ''"> and position = #{position}</if>
        </where>
        order by id
    </select>

    <select id="selectDoctorById" parameterType="Long" resultMap="DoctorResult">
        <include refid="selectDoctorVo"/>
        where id = #{id}
    </select>
    <select id="findDocByPhone" resultMap="DoctorResult">
        <include refid="selectDoctorVo"/> where phone = #{phonenumber}
    </select>
    <select id="findByPhoneAndDep" resultMap="OfficeResultRes">
        <include refid="selectDoctorVo1"/>
        where phone = #{phone}
    </select>

    <insert id="insertDoctor" parameterType="Doctor" useGeneratedKeys="true" keyProperty="id">
        insert into doctor
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="username != null and username != ''">username,</if>
            <if test="gender != null and gender != ''">gender,</if>
            <if test="idCard != null and idCard != ''">ID_card,</if>
            <if test="phone != null and phone != ''">phone,</if>
            <if test="userId != null">user_id,</if>
            <if test="age != null">age,</if>
            <if test="deptId != null">dept_id,</if>
            <if test="position != null and position != ''">position,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="username != null and username != ''">#{username},</if>
            <if test="gender != null and gender != ''">#{gender},</if>
            <if test="idCard != null and idCard != ''">#{idCard},</if>
            <if test="phone != null and phone != ''">#{phone},</if>
            <if test="userId != null">#{userId},</if>
            <if test="age != null">#{age},</if>
            <if test="deptId != null">#{deptId},</if>
            <if test="position != null and position != ''">#{position},</if>
        </trim>
    </insert>

    <update id="updateDoctor" parameterType="Doctor">
        update doctor
        <trim prefix="SET" suffixOverrides=",">
            <if test="username != null and username != ''">username = #{username},</if>
            <if test="gender != null and gender != ''">gender = #{gender},</if>
            <if test="idCard != null and idCard != ''">ID_card = #{idCard},</if>
            <if test="phone != null and phone != ''">phone = #{phone},</if>
            <if test="userId != null">user_id = #{userId},</if>
            <if test="age != null">age = #{age},</if>
            <if test="deptId != null">dept_id = #{deptId},</if>
            <if test="position != null and position != ''">position = #{position},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteDoctorById" parameterType="Long">
        delete from doctor where id = #{id}
    </delete>

    <delete id="deleteDoctorByIds" parameterType="String">
        delete from doctor where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>